@page "/SalesOrder/{SalesOrderId}"
@using SalesOrderDataManager.BLL.DTO
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Order information</h3>
@if (_orderDto is not null)
{
    <div class="alert alert-light" role="alert">
        <table>
            <tr>
                <td>Order name </td>
                <td>:</td>
                <td class="fw-bold">@_orderDto.Name</td>
            </tr>
            <tr>
                <td>Order state </td>
                <td>:</td>
                <td class="fw-bold">
                    <span>@(_orderDto.State)</span>
                </td>
            </tr>
        </table>
    </div>
}

@if (_windowDtos is null)
{
    <p> Loading...</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Window name</th>
            <th>Quantity of windows</th>
            <th>Total sub elements</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var window in _windowDtos)
        {
            <tr>
                <td>@window.Name</td>
                <td>@window.QuantityOfWindows</td>
                <td>@window.TotalSubElements</td>
                <td>
                    <button type="submit"
                            @onclick="@(_ => ClickEditRecord(window))">
                        Edit
                    </button>
                    &nbsp;
                    <button type="submit"
                            @onclick="@(_ => ClickDeleteButton(window))">
                        Delete
                    </button>
                </td>
            </tr>
        }
        </tbody>
    </table>
}
@code {
    [Parameter] public string? SalesOrderId { get; set; }

    private SalesOrderDTO? _orderDto;
    private List<WindowDTO>? _windowDtos;
    protected override async Task OnParametersSetAsync()
    {
        _orderDto = await Http.GetFromJsonAsync<SalesOrderDTO>($"api/SalesOrder/{SalesOrderId}");
        _windowDtos = await Http.GetFromJsonAsync<List<WindowDTO>>($"api/SalesOrder/{SalesOrderId}/Window");
        await base.OnParametersSetAsync();
    }
    private async Task ClickDeleteButton(WindowDTO obj)
    {
    }

    private async Task ClickEditRecord(WindowDTO obj)
    {
    }
}